name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      sonarqube:
        image: sonarqube
        ports:
          - 9000:9000
        options: >-
          --health-cmd="curl --fail http://localhost:9000/api/system/health || exit 1"
          --health-interval=30s
          --health-timeout=10s
          --health-retries=10

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'

    - name: Install dependencies
      run: npm install

    - name: Run tests
      run: npm test

    - name: Wait for SonarQube to be ready
      run: |
        echo "Waiting for SonarQube to be ready..."
        for i in $(seq 1 30); do
          if curl -s http://localhost:9000/api/system/status | grep -q 'UP'; then
            echo "SonarQube is up and running"
            break
          fi
          echo "Waiting for SonarQube..."
          sleep 10
        done

    - name: Run SonarQube scan
      env:
        SONAR_HOST_URL: http://localhost:9000
        SONAR_LOGIN: ${{ secrets.SONAR_TOKEN }}
      run: |
        npm install -g sonar-scanner
        sonar-scanner

    - name: Build project
      run: npm run build

    - name: Build Docker image
      run: docker build -t todo-app .

    - name: Log in to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}

    - name: Push Docker image to DockerHub
      run: docker push todo-app
